{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  var fitMapToMarkers = function fitMapToMarkers(map, markers) {\n    var bounds = new mapboxgl.LngLatBounds();\n    markers.forEach(function (marker) {\n      return bounds.extend([marker.lng, marker.lat]);\n    });\n    map.fitBounds(bounds, {\n      padding: 70,\n      maxZoom: 15,\n      duration: 0\n    });\n  };\n\n  var addMarkersToMap = function addMarkersToMap(map, markers) {\n    markers.forEach(function (marker) {\n      var popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n\n      new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).setPopup(popup) // add this\n      .addTo(map);\n    });\n  };\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/tpmessett/ckljm0x690j0k17pex6e7h62u'\n    });\n    var markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach(function (marker) {\n      new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(map);\n    });\n    fitMapToMarkers(map, markers);\n    addMarkersToMap(map, markers);\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/Users/Dan/code/danmenza/prestige-worldwide/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","initMapbox","mapElement","document","getElementById","fitMapToMarkers","map","markers","bounds","LngLatBounds","forEach","marker","extend","lng","lat","fitBounds","padding","maxZoom","duration","addMarkersToMap","popup","Popup","setHTML","infoWindow","Marker","setLngLat","setPopup","addTo","accessToken","dataset","mapboxApiKey","Map","container","style","JSON","parse"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AACxC,QAAMC,MAAM,GAAG,IAAIR,QAAQ,CAACS,YAAb,EAAf;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM;AAAA,aAAIH,MAAM,CAACI,MAAP,CAAc,CAAED,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CAAd,CAAJ;AAAA,KAAtB;AACAR,IAAAA,GAAG,CAACS,SAAJ,CAAcP,MAAd,EAAsB;AAAEQ,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,OAAO,EAAE,EAAxB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAAtB;AACD,GAJD;;AAKA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACb,GAAD,EAAMC,OAAN,EAAkB;AACxCA,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,UAAMS,KAAK,GAAG,IAAIpB,QAAQ,CAACqB,KAAb,GAAqBC,OAArB,CAA6BX,MAAM,CAACY,UAApC,CAAd,CAD0B,CACqC;;AAC/D,UAAIvB,QAAQ,CAACwB,MAAb,GACGC,SADH,CACa,CAAEd,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CADb,EAEGY,QAFH,CAEYN,KAFZ,EAEmB;AAFnB,OAGGO,KAHH,CAGSrB,GAHT;AAID,KAND;AAOD,GARD;;AASA,MAAIJ,UAAJ,EAAgB;AAAE;AAChBF,IAAAA,QAAQ,CAAC4B,WAAT,GAAuB1B,UAAU,CAAC2B,OAAX,CAAmBC,YAA1C;AACA,QAAMxB,GAAG,GAAG,IAAIN,QAAQ,CAAC+B,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,KAAjB,CAAZ;AAIA,QAAM1B,OAAO,GAAG2B,IAAI,CAACC,KAAL,CAAWjC,UAAU,CAAC2B,OAAX,CAAmBtB,OAA9B,CAAhB;AACAA,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,UAAIX,QAAQ,CAACwB,MAAb,GACGC,SADH,CACa,CAAEd,MAAM,CAACE,GAAT,EAAcF,MAAM,CAACG,GAArB,CADb,EAEGa,KAFH,CAESrB,GAFT;AAGD,KAJD;AAKAD,IAAAA,eAAe,CAACC,GAAD,EAAMC,OAAN,CAAf;AACAY,IAAAA,eAAe,CAACb,GAAD,EAAMC,OAAN,CAAf;AACD;AACF,CA/BD;;AAgCA,SAASN,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n  const fitMapToMarkers = (map, markers) => {\n    const bounds = new mapboxgl.LngLatBounds();\n    markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n    map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n  };\n  const addMarkersToMap = (map, markers) => {\n    markers.forEach((marker) => {\n      const popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n      new mapboxgl.Marker()\n        .setLngLat([ marker.lng, marker.lat ])\n        .setPopup(popup) // add this\n        .addTo(map);\n    });\n  };\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/tpmessett/ckljm0x690j0k17pex6e7h62u'\n    });\n    const markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach((marker) => {\n      new mapboxgl.Marker()\n        .setLngLat([ marker.lng, marker.lat ])\n        .addTo(map);\n    });\n    fitMapToMarkers(map, markers);\n    addMarkersToMap(map, markers);\n  }\n};\nexport { initMapbox };\n\n\n\n"]},"metadata":{},"sourceType":"module"}